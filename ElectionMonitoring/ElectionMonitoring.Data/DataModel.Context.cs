//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElectionMonitoring.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using ElectionMonitoring.Models;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ElectionMonitoringEntities : DbContext
    {
        public ElectionMonitoringEntities()
            : base("name=ElectionMonitoringEntities")
        {
    		this.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Candidate> Candidates { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<CategoryType> CategoryTypes { get; set; }
        public DbSet<Donation> Donations { get; set; }
        public DbSet<Donor> Donors { get; set; }
        public DbSet<Party> Parties { get; set; }
        public DbSet<Project> Projects { get; set; }
        public DbSet<Race> Races { get; set; }
        public DbSet<RaceResult> RaceResults { get; set; }
        public DbSet<RaceType> RaceTypes { get; set; }
        public DbSet<Region> Regions { get; set; }
        public DbSet<RegionType> RegionTypes { get; set; }
    
        public virtual ObjectResult<AggregatedRaceResult> GetAggregatedRaceResult(Nullable<int> raceID, string regionCode)
        {
            var raceIDParameter = raceID.HasValue ?
                new ObjectParameter("RaceID", raceID) :
                new ObjectParameter("RaceID", typeof(int));
    
            var regionCodeParameter = regionCode != null ?
                new ObjectParameter("RegionCode", regionCode) :
                new ObjectParameter("RegionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AggregatedRaceResult>("GetAggregatedRaceResult", raceIDParameter, regionCodeParameter);
        }
    }
}
